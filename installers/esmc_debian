#!/bin/bash
echo "Not going to do MySQL"
# ESET currently recommends no higher than MySQL 5.7. This version goes EOL next year.
# MariaDB, while claimed to be "unsupported" works flawlessly and is downward compatible.
# Even with the correct ODBC, ESMC refuses to work with a modern version of MySQL, so the claim should instead be that MySQL is not supported.
# Reverting to MariaDB since it is more current, faster, and works.

exit
# ESET Security Management Center installer for Linux
# By Robbie Ferguson https://baldnerd.com
# Version 1.1
#
# Changelog:
#
#   1.1 - July 31, 2019 - Moved from MariaDB to MySQL so ESET Technical Team can officially support this deployment
#                         As requested by Nicolás Ezequiel Raggi, Senior Technical Support Engineer (Tier 2), ESET Latinoamérica
#   1.0 - July 12, 2019 - Initial release.

if [[ $EUID -ne 0 ]]; then
  echo "ERROR: This script must be run as root" 2>&1
  exit 1
fi

APT_LISTCHANGES_FRONTEND=cat

read -p "This process is DESTRUCTIVE. Are you sure? " -n 1 -r
if [[ ! $REPLY =~ ^[Yy]$ ]]
then
  echo ""
  echo ""
  echo "Good day to you, sir."
  echo ""
  exit
fi

tmpdir=`mktemp -d -p /tmp/`

# Install some things we will need

  apt update
  yes | apt install openssh-server
  yes | apt install gnupg2
  yes | apt install odbcinst

# MySQL
  if [[ -d /var/lib/mysql ]]; then
    rm -rf /var/lib/mysql
  fi
  yes | apt install gnupg debconf
  wget -O $tmpdir/mysql-apt-config.deb http://repo.mysql.com/mysql-apt-config_0.8.13-1_all.deb
  export DEBIAN_FRONTEND="noninteractive"
  debconf-set-selections <<< "mysql-server mysql-server/root_password password eraadmin"
  debconf-set-selections <<< "mysql-server mysql-server/root_password_again password eraadmin"
  PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin dpkg -i $tmpdir/mysql-apt-config.deb
  apt update
  DEBIAN_PRIORITY=critical apt install -y -q mysql-server

# Configure the MySQL database
echo '[mysqld]
max_allowed_packet=33M
innodb_log_file_size=100M
innodb_log_files_in_group=2
bind-address=127.0.0.1
' > /etc/mysql/mysql.conf.d/90-esmc.cnf
systemctl restart mysql

# Sets up the MySQL root user without asking for input
CURRENT_MYSQL_PASSWORD=''
NEW_MYSQL_PASSWORD="eraadmin" # We will only allow connections from localhost, so this is fine

# Setup the root password and remove sample data and guest accounts
  expect_installed=0
  if [ $(dpkg-query -W -f='${Status}' expect 2>/dev/null | grep -c "ok installed") -eq 0 ]; then
    echo "Can't find expect. Trying install it..."
    yes | apt install expect
    expect_installed=1 # notifies us that expect was installed by us, not the user, so can be removed later
  fi
      SECURE_MYSQL=$(expect -c "

      set timeout 10
      spawn mysql_secure_installation

      expect "Enter password for user root:"
      send "$CURRENT_MYSQL_PASSWORD\r"

      expect "Change the password for root ?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect "New password:"
      send "$NEW_MYSQL_PASSWORD\r"

      expect "Re-enter new password:"
      send "$NEW_MYSQL_PASSWORD\r"

      expect "Do you wish to continue with the password provided?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect "Remove anonymous users?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect "Disallow root login remotely?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect "Remove test database and access to it?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect "Reload privilege tables now?\(Press y\|Y for Yes, any other key for No\) :"
      send "y\r"

      expect eof
      ")

      echo "$SECURE_MYSQL"

# Failsafe
mysql -uroot -peraadmin -e "ALTER USER 'root'@'localhost' IDENTIFIED with mysql_native_password;ALTER USER 'root'@'localhost' IDENTIFIED BY 'eraadmin';FLUSH PRIVILEGES;"

if [[ $expect_installed == 1 ]]; then
  yes | apt purge expect
fi

# Install a VERY OLD version of OpenSSL for use during installation.
# I will remove it later on in the script and upgrade to the current version.
echo 'deb http://httpredir.debian.org/debian jessie main contrib non-free
deb-src http://httpredir.debian.org/debian jessie main contrib non-free

deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free' > /etc/apt/sources.list.d/jessie.list
  apt update
  yes | apt install openssl/jessie

# Install ODBC Connector
yes | apt install unixodbc
wget -O $tmpdir/odbc.tar.gz https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.17-linux-glibc2.12-x86-64bit.tar.gz
cd $tmpdir
tar xvzf odbc.tar.gz
if [[ -e /var/lib/libmyodbc ]]; then
  rm -rf /var/lib/libmyodbc
fi
mkdir -p /var/lib/libmyodbc
cp $tmpdir/mysql-connector-odbc-8.0.17-linux-glibc2.12-x86-64bit/lib/libmyod*a*.so /var/lib/libmyodbc/

odbc=$(find /var/lib/libmyodbc/ -name libmyodbc*a.so)
if [[ $odbc == '' ]]; then
  echo "Can't find the ODBC Connector."
  exit
fi
echo "[MySQL]
Description=MySQL ODBC Connector
Driver=$odbc
FileUsage = 1
UsageCount=1
" > /etc/odbcinst.ini
odbcinst -i -d -f /etc/odbcinst.ini


# Figure out which NIC is being used
  host=google.com
  host_ip=$(getent ahosts "$host" | awk '{print $1; exit}')
  interface=`ip route get "$host_ip" | grep -Po '(?<=(dev )).*(?= src| proto)' | cut -f 1 -d " "`

# Find the server's IP address
  ip=$(/sbin/ip -f inet addr show $interface | grep -Po 'inet \K[\d.]+' | head -n 1)
  if [[ $ip == "" ]]; then
    $ip "127.0.0.1"
  fi

# Find the server's hostname
  hostname=$(/usr/bin/hostname)

# We'll need to combine the above info to create the initial self-signed cert
certhosts="$ip;$hostname;$hostname.local"

# Grab the latest versions of needed components

# ESET Security Management Center Server Component
wget -O $tmpdir/server-linux-x86_64.sh https://download.eset.com/com/eset/apps/business/era/server/linux/latest/server-linux-x86_64.sh && chmod +x $tmpdir/server-linux-x86_64.sh && yes | $tmpdir/server-linux-x86_64.sh --skip-license --db-driver=MySQL --db-hostname=127.0.0.1 --db-port=3306 --db-admin-username=root --db-admin-password=$NEW_MYSQL_PASSWORD --server-root-password=eraadmin --db-user-username=root --db-user-password=$NEW_MYSQL_PASSWORD --cert-hostname="$certhosts"

# Web Server
yes | apt install openjdk-11-jdk tomcat9
systemctl stop tomcat9
# Make a file in the root that automatically reroutes the user to /era/
echo '<?xml version="1.0" encoding="ISO-8859-1"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head> <title>ESMC Redirect</title></head><body><script>window.location.replace("https://'$ip':8443/era/");</script></body></html>' > /var/lib/tomcat9/webapps/ROOT/index.html
wget -O /var/lib/tomcat9/webapps/era.war https://download.eset.com/com/eset/apps/business/era/webconsole/latest/era.war
# Move tomcat to https
  if [[ -d /etc/tomcat9/certs/ ]]; then
    rm -rf /etc/tomcat9/certs/
  fi
  mkdir /etc/tomcat9/certs

  # Create keystore
  keytool -genkeypair -alias "tomcat" -keyalg RSA -keysize 4096 -validity 3650 -keystore "/etc/tomcat9/certs/tomcat.keystore" -storepass "eraadmin" -keypass "eraadmin" -dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
  # Export certificate
  keytool -certreq -alias tomcat -file "/etc/tomcat9/certs/tomcat.csr" -keystore "/etc/tomcat9/certs/tomcat.keystore" -storepass "eraadmin" -ext san=dns:ESMC7-2008R2
  # Add port 8443 and redirect
  sed -i '/<\/Engine>/a<Connector server="ESMC" port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol" SSLEnabled="true" maxThreads="150" scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" keystoreFile="/etc/tomcat9/certs/tomcat.keystore" keystorePass="eraadmin"/>' /etc/tomcat9/server.xml
systemctl start tomcat9

# Install the agent so the ESMC console can see this server
wget -O $tmpdir/agent-linux-x86_64.sh https://download.eset.com/com/eset/apps/business/era/agent/latest/agent-linux-x86_64.sh && chmod +x $tmpdir/agent-linux-x86_64.sh && yes | $tmpdir/agent-linux-x86_64.sh --skip-license --hostname=$ip --port=2222 --webconsole-user=Administrator --webconsole-password=eraadmin --webconsole-port=2223

# Now that the install is complete we can upgrade OpenSSL to the current version
rm /etc/apt/sources.list.d/jessie.list
apt update
yes | apt install openssl

# A bit of cleanup
rm -rf $tmpdir

echo ""
echo "Done. Access ESET Security Management Center at https://$ip:8443"
echo ""
