#!/bin/bash

# ESET Security Management Center installer for Linux
# By Robbie Ferguson https://baldnerd.com

if [[ $EUID -ne 0 ]]; then
  echo "ERROR: This script must be run as root" 2>&1
  exit 1
fi

APT_LISTCHANGES_FRONTEND=cat

if [[ $1 != "force" ]]; then
  read -p "This process is DESTRUCTIVE. Are you sure? " -n 1 -r
  if [[ ! $REPLY =~ ^[Yy]$ ]]
  then
    echo ""
    echo ""
    echo "Good day to you, sir."
    echo ""
    exit
  fi
fi

tmpdir=`mktemp -d -p /tmp/`

# Install some things we will need

  apt update
  yes | apt install openssh-server
  yes | apt install mariadb-server
  yes | apt install gnupg2
  yes | apt install odbcinst

# setup default database
if [[ -d /var/lib/mysql ]]; then
  rm -rf /var/lib/mysql
fi
mysql_install_db

# Install a VERY OLD version of OpenSSL for use during installation.
# I will remove it later on in the script and upgrade to the current version.
echo 'deb http://httpredir.debian.org/debian jessie main contrib non-free
deb-src http://httpredir.debian.org/debian jessie main contrib non-free

deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free' > /etc/apt/sources.list.d/jessie.list
  apt update
  yes | apt install openssl/jessie

# Install ODBC Connector
yes | apt install libmyodbc
odbc=$(find /usr/ -name libmyodbc.so)
if [[ $odbc == '' ]]; then
  echo "Can't find the ODBC Connector."
  exit
fi
echo "[MySQL]
Description=MySQL ODBC Connector
Driver=$odbc
FileUsage = 1
UsageCount=1
" > /etc/odbcinst.ini
odbcinst -i -d -f /etc/odbcinst.ini


# Configure the database
echo '
[mysqld]
max_allowed_packet=33M
innodb_log_file_size=100M
innodb_log_files_in_group=2
' > /etc/mysql/mariadb.conf.d/90-esmc.cnf
systemctl restart mariadb

# This is a handy bit of code adapted from https://gist.github.com/coderua/5592d95970038944d099
# Sets up the MariaDB root user without asking for input
CURRENT_MYSQL_PASSWORD=''
NEW_MYSQL_PASSWORD="eraadmin" # Remember, MariaDB by default only allows connections from localhost, so this is fine
if [ $(dpkg-query -W -f='${Status}' expect 2>/dev/null | grep -c "ok installed") -eq 0 ]; then
    echo "Can't find expect. Trying install it..."
    yes | apt install expect
fi
SECURE_MYSQL=$(expect -c "
set timeout 3
spawn mysql_secure_installation
expect \"Enter current password for root (enter for none):\"
send \"$CURRENT_MYSQL_PASSWORD\r\"
expect \"root password?\"
send \"y\r\"
expect \"New password:\"
send \"$NEW_MYSQL_PASSWORD\r\"
expect \"Re-enter new password:\"
send \"$NEW_MYSQL_PASSWORD\r\"
expect \"Remove anonymous users?\"
send \"y\r\"
expect \"Disallow root login remotely?\"
send \"y\r\"
expect \"Remove test database and access to it?\"
send \"y\r\"
expect \"Reload privilege tables now?\"
send \"y\r\"
expect eof
")
echo "${SECURE_MYSQL}"
# Failsafe
mysql -uroot -peraadmin -e "ALTER USER 'root'@'localhost' IDENTIFIED with mysql_native_password;ALTER USER 'root'@'localhost' IDENTIFIED BY 'eraadmin';FLUSH PRIVILEGES;"

yes | apt purge expect

# Figure out which NIC is being used
  host=google.com
  host_ip=$(getent ahosts "$host" | awk '{print $1; exit}')
  interface=`ip route get "$host_ip" | grep -Po '(?<=(dev )).*(?= src| proto)' | cut -f 1 -d " "`

# Find the server's IP address
  ip=$(/sbin/ip -f inet addr show $interface | grep -Po 'inet \K[\d.]+' | head -n 1)
  if [[ $ip == "" ]]; then
    $ip "127.0.0.1"
  fi

# Find the server's hostname
  hostname=$(/usr/bin/hostname)

# We'll need to combine the above info to create the initial self-signed cert
certhosts="$ip;$hostname;$hostname.local"

# Grab the latest versions of needed components

# ESET Security Management Center Server Component
wget -O $tmpdir/server-linux-x86_64.sh https://download.eset.com/com/eset/apps/business/era/server/linux/latest/server-linux-x86_64.sh && chmod +x $tmpdir/server-linux-x86_64.sh && yes | $tmpdir/server-linux-x86_64.sh --skip-license --db-driver=MySQL --db-hostname=127.0.0.1 --db-port=3306 --db-admin-username=root --db-admin-password=$NEW_MYSQL_PASSWORD --server-root-password=eraadmin --db-user-username=root --db-user-password=$NEW_MYSQL_PASSWORD --cert-hostname="$certhosts"

# Web Server
yes | apt install openjdk-11-jdk tomcat9
systemctl stop tomcat9
# Make a file in the root that automatically reroutes the user to /era/
echo '<?xml version="1.0" encoding="ISO-8859-1"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head> <title>ESMC Redirect</title></head><body><script>window.location.replace("https://'$ip':8443/era/");</script></body></html>' > /var/lib/tomcat9/webapps/ROOT/index.html
wget -O /var/lib/tomcat9/webapps/era.war https://download.eset.com/com/eset/apps/business/era/webconsole/latest/era.war
# Move tomcat to https
  if [[ -d /etc/tomcat9/certs/ ]]; then
    rm -rf /etc/tomcat9/certs/
  fi
  mkdir /etc/tomcat9/certs

  # Create keystore
  keytool -genkeypair -alias "tomcat" -keyalg RSA -keysize 4096 -validity 3650 -keystore "/etc/tomcat9/certs/tomcat.keystore" -storepass "eraadmin" -keypass "eraadmin" -dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
  # Export certificate
  keytool -certreq -alias tomcat -file "/etc/tomcat9/certs/tomcat.csr" -keystore "/etc/tomcat9/certs/tomcat.keystore" -storepass "eraadmin" -ext san=dns:ESMC7-2008R2
  # Add port 8443 and redirect
  sed -i '/<\/Engine>/a<Connector server="ESMC" port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol" SSLEnabled="true" maxThreads="150" scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" keystoreFile="/etc/tomcat9/certs/tomcat.keystore" keystorePass="eraadmin"/>' /etc/tomcat9/server.xml
systemctl start tomcat9

# Install the agent so the ESMC console can see this server
wget -O $tmpdir/agent-linux-x86_64.sh https://download.eset.com/com/eset/apps/business/era/agent/latest/agent-linux-x86_64.sh && chmod +x $tmpdir/agent-linux-x86_64.sh && yes | $tmpdir/agent-linux-x86_64.sh --skip-license --hostname=$ip --port=2222 --webconsole-user=Administrator --webconsole-password=eraadmin --webconsole-port=2223

# Now that the install is complete we can upgrade OpenSSL to the current version
rm /etc/apt/sources.list.d/jessie.list
apt update
yes | apt install openssl

# A bit of cleanup
rm -rf $tmpdir

echo ""
echo "Done. Access ESET Security Management Center at https://$ip:8443"
echo ""
